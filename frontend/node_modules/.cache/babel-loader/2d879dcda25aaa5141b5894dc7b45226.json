{"ast":null,"code":"var _jsxFileName = \"/Users/pimolpornmalsuthi/senior-wholesalery/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import Rating from \"../components/Rating\";\n// import data from \"../data\";\n// export default function ProductScreen(props) {\n//     const product = data.product.find(x => x._id === props.match.params.id);\n//     if (!product) {\n//         return <div>Product Not Found</div>\n//     }\n//     return (\n//         <div>\n//             <div className=\"row\">\n//                     <div className=\"col-2\">\n//                         <img className=\"large\" src={product.Image} alt={product.name}></img>\n//                     </div>\n//                     <div className=\"col-1\">\n//                         <ul>\n//                             <li>\n//                                 <h1>{product.name}</h1>\n//                             </li>\n//                             <li>\n//                                 <Rating />\n//                             </li>\n//                             <li>\n//                                 price : {product.price} ฿\n//                             </li>\n//                             <li>Description\n//                                 <p>{product.description}</p>\n//                             </li>\n//                         </ul>\n//                     </div>\n//                     <div className=\"col-1\">\n//                         <div className=\"card card-body\">\n//                             <ul>\n//                                 <li>\n//                                     <div className=\"row\">\n//                                         <div>Price</div>\n//                                         <div className=\"price\">{product.price} ฿</div>\n//                                     </div>\n//                                 </li>\n//                                 <li>\n//                                     <div className=\"row\">\n//                                         <div>Status</div>\n//                                         <div>\n//                                             {product.countInStock > 0 ? (<span className=\"success\">In Stock</span>\n//                                             ) : (\n//                                                 <span className=\"error\">Unavaliable</span>\n//                                             )}\n//                                         </div>\n//                                     </div>\n//                                 </li>\n//                                 <li>\n//                                     <button className=\"addtocart\">Add to cart</button>\n//                                 </li>\n//                             </ul>\n//                         </div>\n//                     </div>\n//             </div>\n//         </div>\n//     );\n// }\nimport React, { useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport \"./style.css\";\nimport data from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Product(props) {\n  _s();\n\n  const [color, setColor] = useState(\"#80CED7\");\n  const product = data.product.find(x => x._id === props.match.params.id);\n\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Product Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"large\",\n        src: product.Image,\n        alt: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"buttonRow\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Available Colors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"blue\",\n            onClick: () => setColor(\"#80CED7\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"flax\",\n            onClick: () => setColor(\"#E9D985\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"red\",\n            onClick: () => setColor(\"#BF211E\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/checkout\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"buy\",\n              variant: \"primary\",\n              children: \"Buy Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, product._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Product, \"nAYfpDa0g5OnMzjGxyv3K+lkgVM=\");\n\n_c = Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/pimolpornmalsuthi/senior-wholesalery/frontend/src/screens/ProductScreen.js"],"names":["React","useState","Button","Col","Row","data","Product","props","color","setColor","product","find","x","_id","match","params","id","Image","name","description","textAlign","price"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import Rating from \"../components/Rating\";\n// import data from \"../data\";\n\n// export default function ProductScreen(props) {\n//     const product = data.product.find(x => x._id === props.match.params.id);\n//     if (!product) {\n//         return <div>Product Not Found</div>\n//     }\n//     return (\n//         <div>\n//             <div className=\"row\">\n//                     <div className=\"col-2\">\n//                         <img className=\"large\" src={product.Image} alt={product.name}></img>\n//                     </div>\n//                     <div className=\"col-1\">\n//                         <ul>\n//                             <li>\n//                                 <h1>{product.name}</h1>\n//                             </li>\n//                             <li>\n//                                 <Rating />\n//                             </li>\n//                             <li>\n//                                 price : {product.price} ฿\n//                             </li>\n//                             <li>Description\n//                                 <p>{product.description}</p>\n//                             </li>\n//                         </ul>\n//                     </div>\n//                     <div className=\"col-1\">\n//                         <div className=\"card card-body\">\n//                             <ul>\n//                                 <li>\n//                                     <div className=\"row\">\n//                                         <div>Price</div>\n//                                         <div className=\"price\">{product.price} ฿</div>\n//                                     </div>\n//                                 </li>\n//                                 <li>\n//                                     <div className=\"row\">\n//                                         <div>Status</div>\n//                                         <div>\n//                                             {product.countInStock > 0 ? (<span className=\"success\">In Stock</span>\n//                                             ) : (\n//                                                 <span className=\"error\">Unavaliable</span>\n//                                             )}\n//                                         </div>\n//                                     </div>\n//                                 </li>\n//                                 <li>\n//                                     <button className=\"addtocart\">Add to cart</button>\n//                                 </li>\n//                             </ul>\n//                         </div>\n//                     </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport \"./style.css\";\nimport data from \"../data\";\n\nexport default function Product(props) {\n  const [color, setColor] = useState(\"#80CED7\");\n  const product = data.product.find(x => x._id === props.match.params.id);\n    if (!product) {\n        return <div>Product Not Found</div>\n    }\n\n  return (\n    <Row className=\"item\" key={product._id}>\n      <Col sm={6}>\n        <img className=\"large\" src={product.Image} alt={product.name}></img>\n      </Col>\n      <Col className=\"info\">\n        <h2>{product.name}</h2>\n        <br />\n        <br />\n        <p>{product.description}</p>\n        <Row className=\"buttonRow\">\n          <Col>\n            <p>Available Colors:</p>\n            <Button id=\"blue\" onClick={() => setColor(\"#80CED7\")}></Button>\n            <Button id=\"flax\" onClick={() => setColor(\"#E9D985\")}></Button>\n            <Button id=\"red\" onClick={() => setColor(\"#BF211E\")}></Button>\n          </Col>\n          <Col style={{ textAlign: \"right\" }}>\n            <p>Price: {product.price}</p>\n            <a href=\"/checkout\">\n              <Button id=\"buy\" variant=\"primary\">\n                Buy Now\n              </Button>\n            </a>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}"]},"metadata":{},"sourceType":"module"}